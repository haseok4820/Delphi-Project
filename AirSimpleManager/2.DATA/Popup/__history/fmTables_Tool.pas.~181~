unit fmTables_Tool;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Frame_Edit, Vcl.StdCtrls, Vcl.ExtCtrls, Frame_ComboBox;

type
  TForm_TableTool = class(TForm)
    Frame_Edit_X: TFrame_ENV_Edit;
    Frame_Edit_Y: TFrame_ENV_Edit;
    Frame_Edit_W: TFrame_ENV_Edit;
    Frame_Edit_H: TFrame_ENV_Edit;
    Panel_Title: TPanel;
    Label_Close: TLabel;
    ComboBox_Table: TComboBox;
    Frame_Edit_Name: TFrame_ENV_Edit;
    Timer_Refrush: TTimer;
    Shape_BG: TShape;
    procedure Panel_TitleMouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
    procedure Label_CloseClick(Sender: TObject);
    procedure Button_ResetClick(Sender: TObject);
    procedure ComboBox_TableChange(Sender: TObject);
    procedure Timer_RefrushTimer(Sender: TObject);
    procedure TableChange(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Frame_Edit_NameEdit_ValueExit(Sender: TObject);
  private
    { Private declarations }
    procedure ShowTable;
    procedure ShowTableinfo(iFloor, iTableNo: Byte);
  public
    { Public declarations }
  end;

var
  Form_TableTool: TForm_TableTool;

implementation

{$R *.dfm}

uses uDM, fmTables, fmDATA2_2;

procedure TForm_TableTool.Button_ResetClick(Sender: TObject);
begin
  DM.GetList('좌석배열 유형을 선택해주세요.', arrTableReset);
end;

procedure TForm_TableTool.ComboBox_TableChange(Sender: TObject);
var
  iTag: Byte;
begin
  iTag := (Sender as TComboBox).ItemIndex;
  ShowTableinfo(iSelFloor, iTag);
end;

procedure TForm_TableTool.FormShow(Sender: TObject);
begin
  Timer_Refrush.Enabled := True;
end;

procedure TForm_TableTool.Frame_Edit_NameEdit_ValueExit(Sender: TObject);
begin
  //
end;

procedure TForm_TableTool.Label_CloseClick(Sender: TObject);
begin
  Close;
end;

procedure TForm_TableTool.Panel_TitleMouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
begin
  ReleaseCapture;
  SendMessage(Handle, WM_NCLBUTTONDOWN, HTCAPTION, 0);
end;

procedure TForm_TableTool.ShowTable;
var
  i: Byte;
  // TableControl : TControl;
begin
  ComboBox_Table.Items.Clear;

  for i := Low(arrTable[iSelFloor]) to High(arrTable[iSelFloor]) do
    ComboBox_Table.Items.Add(IntToStr(arrTable[iSelFloor, i].iTableNo) + ' : ' + arrTable[iSelFloor, i].sTableName);

  if ComboBox_Table.Items.Count = 0 then
  begin
    ShowMEssage('해당 층수에 좌석(테이블) 정보가 없습니다.');
    ComboBox_Table.ItemIndex := -1;
    iSelTable := -1;
  end;
end;

procedure TForm_TableTool.ShowTableinfo(iFloor, iTableNo: Byte);
begin
  ComboBox_Table.ItemIndex := iSelTable;

  with arrTable[iSelFloor, iSelTable] do
  begin
    Frame_Edit_Name.Edit_Value.Text := sTableName;
    Frame_Edit_X.Edit_Value.Text := IntToStr(iTable_X);
    Frame_Edit_Y.Edit_Value.Text := IntToStr(iTable_Y);
    Frame_Edit_W.Edit_Value.Text := IntToStr(iTable_W);
    Frame_Edit_H.Edit_Value.Text := IntToStr(iTable_H);
  end;

end;

procedure TForm_TableTool.TableChange(Sender: TObject);
const
  iX = 0;
  iY = 1;
  iW = 2;
  iH = 3;
  iName = 4;
var
  iTag: Byte;
  sVal: String;

  ControlPanel: TPanel;
begin
  //
  iTag := (Sender as TEdit).Tag;
  sVal := (Sender as TEdit).Text;
  with arrTable[iSelFloor, iSelTable] do
  begin
    case iTag of
      iX:
        iTable_X := StrToIntDef(sVal, 0);
      iY:
        iTable_Y := StrToIntDef(sVal, 0);
      iW:
        iTable_W := StrToIntDef(sVal, 100);
      iH:
        iTable_H := StrToIntDef(sVal, 60);
      iName:
        sTableName := sVal;
    end;

    ControlPanel := (Form_Table.Panel_Table.FindComponent('Table_' + IntToStr(iSelTable)) as TPanel);
    if ControlPanel <> nil then
    begin
      with ControlPanel do
      begin
        Caption := '[' + Format('%.3d', [iTableNo]) + ']' + sTableName;
        Left := iTable_X;
        Top := iTable_Y;
        Width := iTable_W;
        Height := iTable_H;
      end;
    end;
  end;
end;

procedure TForm_TableTool.Timer_RefrushTimer(Sender: TObject);
begin
  Timer_Refrush.Enabled := False;
  if iSelTable >= 0 then
  begin
    Visible := True;
    ShowTable;
    ShowTableinfo(iSelFloor, iSelTable);
  end
  else
  begin
    Visible := False;
  end;
end;

end.
