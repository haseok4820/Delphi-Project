unit fmSYS1_3;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics, uDM,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Frame_ComboBox, Vcl.ComCtrls, Frame_Edit,
  Frame_LoadFile, Vcl.OleCtrls, WMPLib_TLB;

type
  TForm_SYS1_3 = class(TForm)
    Panel_Footer: TPanel;
    Button_RollBack: TButton;
    Button_Commit: TButton;
    ScrollBox_Body: TScrollBox;
    Shape1: TShape;
    GroupBox_Media: TGroupBox;
    GroupBox_Options: TGroupBox;
    Panel_Right: TPanel;
    CheckBox_useAirCall: TCheckBox;
    CheckBox_MediaMute: TCheckBox;
    CheckBox_ShowMenuList: TCheckBox;
    CheckBox_DelData: TCheckBox;
    CheckBox_useTopMost: TCheckBox;
    CheckBox_OrdNoneView: TCheckBox;
    CheckBox_DspSetView: TCheckBox;
    CheckBox_useViewCount: TCheckBox;
    CheckBox_useDualMonitor: TCheckBox;
    Panel_Left: TPanel;
    Frame_DID_DBPath: TFrame_ENV_Edit;
    Frame_DID_WaitTitle: TFrame_ENV_Edit;
    Frame_DID_CompleteTitle: TFrame_ENV_Edit;
    Frame_DID_CompleteTime: TFrame_ENV_Edit;
    Frame_DID_MainIP: TFrame_ENV_Edit;
    Frame_DID_CallTimeout: TFrame_ENV_Edit;
    Panel_DID_Option2: TPanel;
    Label_DID_Option2: TLabel;
    Frame_DID_ComboBelltype: TFrame_ENV_ComboBox;
    Panel_DID_Option1: TPanel;
    Label_DID_Option1: TLabel;
    Frame_DID_ComboDIDViewType: TFrame_ENV_ComboBox;
    Panel_Header: TPanel;
    Label_Title: TLabel;
    Button_Refrush: TButton;
    Panel1: TPanel;
    Frame_ENV_LoadFile1: TFrame_ENV_LoadFile;
    Frame_ENV_LoadFile2: TFrame_ENV_LoadFile;
    Frame_ENV_LoadFile3: TFrame_ENV_LoadFile;
    Frame_ENV_LoadFile4: TFrame_ENV_LoadFile;
    Frame_ENV_LoadFile5: TFrame_ENV_LoadFile;
    Panel2: TPanel;
    WindowsMediaPlayer1: TWindowsMediaPlayer;
    Button1: TButton;
    Frame_ComboBox_List: TFrame_ENV_ComboBox;
    CheckBox_usePosView: TCheckBox;
    Edit_sPosViewList: TEdit;
    procedure Button1Click(Sender: TObject);
    procedure Button_RefrushClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure Frame_ComboBox_ListClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure GetOptions(iType: Integer);
    procedure SetOptions(iType: Integer);
  end;

var
  Form_SYS1_3: TForm_SYS1_3;
  GroupList: array of TGroupBox;
  bSaveChk: Boolean = True;

  arrDIDList: array [1 .. 5] of String = (
    '유형1(준비중, 주문정보)',
    '유형2(준비중, 주문정보, 미디어)',
    '유형3(미디어, 호출창)',
    '유형4(미디어, 주문별문구표시)',
    '유형5(대기건, 미디어, 호출창)'
  );
  arrDIDCallTypeList: array [0 .. 3] of String = (
    '사용안함',
    '유형1-초인종',
    '유형2-고객호출(Text-To-Sheech)',
    '유형2-고객호출(Wav)'
  );

implementation

{$R *.dfm}
{ TForm_SYS1_3 }

{ TForm_SYS1_3 }

procedure TForm_SYS1_3.Button1Click(Sender: TObject);
var
  Result_IS: TResult_IS;
begin
  Result_IS := DM.GetOpen(1);
  if Result_IS.Result_int <> 0 then
  begin
    WindowsMediaPlayer1.URL := Result_IS.Result_Str;

  end;
end;

procedure TForm_SYS1_3.Button_RefrushClick(Sender: TObject);
var
  iTag, iLoadType: Integer;
begin
  //
  iTag := Frame_ComboBox_List.Tag;
  if arrPos_Info[iTag].sAppName = 'FOODCAFE' then
    iLoadType := 1
  else if arrPos_Info[iTag].sAppName = 'KIOSK' then
    iLoadType := 2
  else if arrPos_Info[iTag].sAppName = 'DID' then
    iLoadType := 3
  else
  begin
    DM.GetPopup(0, '처리불가', '지원하지 않거나, 잘못된 요청입니다.', '');
    Exit;
  end;

  DM.Send_Msg('{"MsgType" : "Load", "PosHost" : "' + arrPos_Info[iTag].shost + '", "ReqType": ' + IntToStr(iLoadType) + '}');
end;

procedure TForm_SYS1_3.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  if bSaveChk AND (DM.GetPopup(1, '사용자 확인', '변경한 사항을 적용하시겠습니까?', '').Result_int = 1) then
  begin
    // 변경사항 저장처리

  end;
end;

procedure TForm_SYS1_3.FormShow(Sender: TObject);
begin
  //
  if AC_bYN OR (Length(arrPos_Info) <> 0) then
  begin
    Button_Refrush.Visible := True;
    Frame_ComboBox_List.Visible := True;
  end
  else
  begin
    if AC_bYN then
      DM.GetPopup(0, '[사용불가]', '사용할 수 있는 장치가 없습입니다.' + #13 + '연결을 확인해주세요.', '')
    else
      DM.GetPopup(0, '[사용불가]', '관리자만 사용할 수 있는 기능입니다.' + #13 + '설정을 확인해주세요.', '');
  end;

end;

procedure TForm_SYS1_3.Frame_ComboBox_ListClick(Sender: TObject);
var
  Result_IS: TResult_IS;
  arr1: array of String;
  sl: TStringList;
  i: Byte;
begin
  with (Sender as TFrame_ENV_ComboBox) do
  begin

    if Hint = 'GetList' then
    begin
      sl := TStringList.Create;
      for i := Low(arrPos_Info) to High(arrPos_Info) do
      begin
        if arrPos_Info[i].sAppName = 'Air_DID.exe' then
        begin
          sl.Add('POSNO ' + IntToStr(arrPos_Info[i].iSeq) + '(' + arrPos_Info[i].sAppName + ')');
        end;
      end;

      if sl.Count <> 0 then
      begin
        SetLength(arr1, sl.Count);
        for i := Low(arr1) to High(arr1) do
          arr1[i] := sl[i];

        Result_IS := DM.GetList('설정할 장치를 선택해주세요. [현재 DID만 지원중].', arr1);
      end
      else
        DM.GetPopup(0, '장치를 찾을 수 없음', '현재 사용가능한 장치가 없습니다.', '');

    end
    else if Hint = 'GetDIDType' then
      Result_IS := DM.GetList('DID의 화면 유형을 선택해주세요.', arrDIDList)
    else if Hint = 'GetCallType' then
      Result_IS := DM.GetList('DID의 호출 유형을 선택해주세요.', arrDIDCallTypeList);

    if Result_IS.Result_int <> -99 then
    begin
      Tag := Result_IS.Result_int;
      Label_Key.Caption := Result_IS.Result_Str;
    end;
  end;
end;

procedure TForm_SYS1_3.GetOptions(iType: Integer);
begin
  //
  case iType of
    3: // DID
      begin
        Frame_DID_ComboDIDViewType.Tag := DID_Opations.DIDViewType;
        Frame_DID_ComboBelltype.Tag := DID_Opations.iVoiceType;
        Frame_DID_DBPath.Edit_Value.Text := DID_Opations.sAddress;
        Frame_DID_WaitTitle.Edit_Value.Text := DID_Opations.TableUP;
        Frame_DID_CompleteTitle.Edit_Value.Text := DID_Opations.ReadyOrderUp;
        Frame_DID_CompleteTime.Edit_Value.Text := DID_Opations.OrdClearTime;
        Frame_DID_MainIP.Edit_Value.Text := DID_Opations.sHostIP;
        Frame_DID_CallTimeout.Edit_Value.Text := IntToStr(DID_Opations.OrdCallFormTimeout);

        CheckBox_useAirCall.Checked := DID_Opations.useAirCall;
        CheckBox_MediaMute.Checked := DID_Opations.MediaMute;
        CheckBox_ShowMenuList.Checked := DID_Opations.ShowMenuList;
        CheckBox_DelData.Checked := DID_Opations.DelData;
        CheckBox_useTopMost.Checked := DID_Opations.useTopMost;
        CheckBox_OrdNoneView.Checked := DID_Opations.OrdNoneView;
        CheckBox_DspSetView.Checked := DID_Opations.DspSetView;
        CheckBox_useViewCount.Checked := DID_Opations.useViewCount;
        CheckBox_useDualMonitor.Checked := DID_Opations.useDualMonitor;
        CheckBox_usePosView.Checked := DID_Opations.usePosView;
        Edit_sPosViewList.Text := DID_Opations.sPosList;
      end;
  end;
end;

procedure TForm_SYS1_3.SetOptions(iType: Integer);
begin
  //

end;

end.
