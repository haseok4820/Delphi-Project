unit ufmList;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, pngimage,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ComCtrls, Vcl.ExtCtrls,
  Vcl.StdCtrls, dxGDIPlusClasses;

type
  TfmList = class(TForm)
    Panel_Parent: TPanel;
    Panel_Header: TPanel;
    Image_Cancel: TImage;
    Label_title: TLabel;
    ListView_Body: TListView;
    Panel_Scroll: TPanel;
    Button_Up: TButton;
    Button_Down: TButton;
    procedure Image_CancelClick(Sender: TObject);
    procedure ListView_BodySelectItem(Sender: TObject; Item: TListItem;
      Selected: Boolean);
    procedure FormShow(Sender: TObject);
    procedure Label_titleMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Button_DownClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  fmList: TfmList;

implementation

{$R *.dfm}

uses uDM;

procedure TfmList.Button_DownClick(Sender: TObject);
begin
  if Sender is TButton then
    ListView_Body.Scroll(0, (Sender as TButton).Tag);
end;

procedure TfmList.FormShow(Sender: TObject);
var
  bitImg: TBitmap;
  pngimg: TPNGImage;
begin
  ListView_Body.Column[0].Width := ListView_Body.Width - 10;

  if ListView_Body.Items.Count > 13 then
  begin
    Panel_Scroll.Visible := True;
  Button_Up.Height := Panel_Scroll.Height div 2;
  Button_Down.Height := Button_Up.Height;
  end;

  with fmList do
  begin
    with ClientRect do
    begin
      SetWindowRgn(Handle, CreateRoundRectRgn(Left, Top, Right + 1, Bottom + 1, 35, 35), True);
    end;
  end;
end;

procedure TfmList.Image_CancelClick(Sender: TObject);
begin
  ModalResult := mrCancel;
end;

procedure TfmList.Label_titleMouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  ReleaseCapture;
  SendMessage(Handle, WM_NCLBUTTONDOWN, HTCAPTION, 0);
end;

procedure TfmList.ListView_BodySelectItem(Sender: TObject; Item: TListItem;
  Selected: Boolean);
begin
  ModalResult := mrOk;
end;

end.
